server {
server_name wildleek.local;

root /var/www/wildleek/opt/www/frontend/nuxt/www/dist;
index index.html index.htm index.nginx-debian.html;

  listen       80;
  listen       443 ssl;
  ssl_certificate     /var/www/ssl/root.pem;
  ssl_certificate_key /var/www/ssl/root.key;


#set $vue_host http://172.22.0.20:3000;
set $vue_host http://127.0.0.1:3000;
set $django_host http://172.22.0.10:8080;

gzip on;
gzip_buffers 16 8k;
gzip_comp_level 9;
gzip_min_length 6144;
gzip_types text/css text/plain text/json text/x-js text/javascript text/xml application/json application/x-javascript application/xml application/xml+rss application/javascript;
gzip_disable "msie6";
gzip_vary on;
gzip_http_version 1.0;

client_body_buffer_size 20M;
client_header_buffer_size 4M;
client_max_body_size 100M;
large_client_header_buffers 2 12M;


  server_tokens on;
  add_header X-XSS-Protection "1; mode=block";

  
  ssl_session_cache shared:SSL:20m;
  ssl_session_timeout 5m;
  add_header X-Content-Type-Options nosniff;
  keepalive_timeout 70;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DES";
  charset     utf-8;
  add_header X-XSS-Protection "1; mode=block";
 

#location / {
#   proxy_pass $vue_host;
#}


 location /statics/ {
  root  /var/www/wildleek/opt;
   add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
  # Включаем кэширование и тщательно выбираем ключ кэша.
                    #fastcgi_cache wholepage;
                    fastcgi_cache_valid 200 301 302 304 5m;
                    fastcgi_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
                    # Гарантируем, что разные пользователи не получат одну и ту же сессионную Cookie.
                    fastcgi_hide_header "Set-Cookie";
                    # Заставляем nginx кэшировать страницу в любом случае, независимо от
                    # заголовков кэширования, выставляемых в PHP.
                    fastcgi_ignore_headers "Cache-Control" "Expires";

                   # Заставляем браузер каждый раз перезагружать страницу (для ротации).
                   fastcgi_hide_header "Cache-Control";
                   add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
                   fastcgi_hide_header "Pragma";
                   add_header Pragma "no-cache";

                   # Выдаем всегда свежий Last-Modified.
                   expires -1; # Внимание!!! Эта строка expires необходима!
                   add_header Last-Modified $sent_http_Expires;
}

 location /media/ {
  root  /var/www/wildleek/opt;
   add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
  # Включаем кэширование и тщательно выбираем ключ кэша.
                    #fastcgi_cache wholepage;
                    fastcgi_cache_valid 200 301 302 304 5m;
                    fastcgi_cache_key "$request_method|$http_if_modified_since|$http_if_none_match|$host|$request_uri";
                    # Гарантируем, что разные пользователи не получат одну и ту же сессионную Cookie.
                    fastcgi_hide_header "Set-Cookie";
                    # Заставляем nginx кэшировать страницу в любом случае, независимо от
                    # заголовков кэширования, выставляемых в PHP.
                    fastcgi_ignore_headers "Cache-Control" "Expires";

                   # Заставляем браузер каждый раз перезагружать страницу (для ротации).
                   fastcgi_hide_header "Cache-Control";
                   add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
                   fastcgi_hide_header "Pragma";
                   add_header Pragma "no-cache";

                   # Выдаем всегда свежий Last-Modified.
                   expires -1; # Внимание!!! Эта строка expires необходима!
                   add_header Last-Modified $sent_http_Expires;
}

location /robot.txt {
  root /var/www/wildleek/opt/www/robot/;
  index robot.txt;
}


location /api/v1/ {
      
      proxy_pass $django_host;
  }

location /admin/ {
      proxy_pass $django_host;
  }


location /vue/   {
  proxy_pass $vue_host;
}

location /static/   {
  proxy_pass $vue_host;
}


location ^~ /.well-known/acme-challenge/ {
   default_type "text/plain";
   root /var/www/letsencrypt;
}
location = /.well-known/acme-challenge/ {
   return 404;
}

  if ($scheme = http) {
  #  add_header X-XSS-Protection "1; mode=block";
    return 301 https://$server_name$request_uri;
  }


}
